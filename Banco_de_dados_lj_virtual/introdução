

O objetivo é criar uma loja virtual onde cada produto tem a sua descrição, deve existir uma tabela, para os produtos e outra tabela para as descrições tecnicas, sendo que relacionamento e de  para um.

 produto <-> 1 descrição
 ---------------------------------------------------------------------------------

 O relacionamento de 1 para muitos neste caso vai ser implementedo usando a tabela imagens, funciona usando o conceito de 1 para muitos porque um produto pode ter varias imagens

 1 produto <-> N imagens
 --------------------------------------------------------------------------------

 Criando a tabela clientes

 trata-se de uma tabela simples ela vai conter id,nome,idade do cliente
 e tera uma relação de 1 para muitos com a atabela pedidos porque um cliente pode ter N pedidos
 e não pode existir um pedido sem cliente por motivos obvios. 

 O relacionamento de muitos para muitos 

 No caso deste BD de loja virtual esse relacionamento acontece entre duas tabelas são elas:

 tb_pedidos e tb_produtos -> porque um produto pode estra presente em varios pedidos e varios pedidos
                             podem conter muitos produtos.

 para que este tipo de relacionamento seja possivel e necessario criar um tabela auxiliar, chamada:

 tb_pedidos_produtos -> que recebe os dados do produto e relaciona ele ao pedido e pega os dados do pedido e relaciona ele com o produto. ou seja essa tabela vai conter literalemente o relaciomento entre os dois.e cada novo registro nela significa que um pedido foi feito e esse opedido feito tem um ou mais produtos.

 -----------------------------------------------------------------------------------------------------

tabelas do bd 

tb_clientes
tb_produtos
tb_pedidos
tb_pedidos_produtos
tb_imagens
tb_descricoes_tecnicas

mecanica

O produto 

Um produto é cadastrado e este produto tem (id_produto,valor,nome) este produto tambem tem imagens e descrições tecnicas então ele é associado as imagens na tabela(tb_imagens) atraves de seu id uma imagem tem(id_imagem,id_produto(FK),url), e nas decições tecnicas atraves da tabela(b_descricoes_tecnicas ) que tem (id_descricao_tecnica,id_produto(FK),descricao). Então dá pra concluir que 1 produto e constituido por 3 tabelas diferentes tb_produtos,tb_imagens,tb_descricoes_tecnicas.

O cliente

Um cliente é cadastrado no sistema e esta cliente tem(id_cliente,nome,idade) a esta cliente será adicionado um pedido ele será referenciado na tabela pedidos para que um pedido possa ser feito ou registrado ele deve ter um cliente assciado poruqe não pode existir pedido sem cliente.

O pedido

Um pedido e composto por (id_pedido,id_cliente(FK),data_hora) esses dados são necessarios para que se saiba quem pediu oque foi pedido e quando foi pedido.

Os produtos pedidos

A tabela tb_pedidos_produtos na verdade é uma tabela auxiliar que relaciona,conecta um pedido e um produto em
uma relação de muitos para muitos, em uma caso rela um cliente pode pedir varios produtos e fazer varios pedidos ou apenas pedir muitos produtos de uma vez só, por sua vez um produto pode estar em varios pedidos ou em um pedido só ou seja é uma relação de muitos para muitos.

um item da tabela tb_pedidos_produtos contem id_pedido(FK),id_produto(FK), atraves do id do produto temos 

1 - os dados dele que esta na tabela tb_produtos

e atraves do id_pedido temos

2 - o id do ciente que pediu o produto quanto o id do produto que foi pedido.

embora essa tabela receba poucos dados ajuda muito  na hora de conectar os dois.   
-----------------------------------------------------------

JOINS - > JUNÇÕES

Geralmente consultas usando JOINS tem como objetivo trazer resultados especificoas ou gerais de mais de uma tabela
e juntar estes resultados com fins de comparaçao, verificação , organização .....

um exemplo de codigo usando  JOIN neste codigo estou fazendo uma consulta de todos os dados da tabela clientes 
junto com os dados da tabela pedidos, porem esta sendo exigida uma condição a tabela clientes que esta a esquerda é 
prioridade essa tem que ser retornada de qualquer jeito, mas os dados da tabela pedidos so devem ser retornados somente 
se exitir um relaciomaneto coimo eu digo desntro da função ON so seram retronados dados onde o id_cliente tiver o mesmo valor
do id_cliente na tabela pedidos, ou seja se houver uma relacionamento por meio do id_cliente. ou seja nisso estamos pérguntando 
quais clientes tem pedidos ligados a seu cadastro.

A função ON() é muito importante para estabelecer as condições dos joins  


SELECT
      *
FROM 
     tb_clientes LEFT JOIN tb_pedidos ON(tb_clientes.id_cliente = tb_pedidos.id_cliente);

-------------------------------------------------------------------------------------------------------------------------

A segunda pergunta é quantos produtos tem imagens  ?

da pra observar na condição dentro da função ON() que ele vai procurar o valor de id_produto dentro da tabela tb_imagens e
se ele encontrar significa que o porduto tem uma imagem associada a ele senão ele nao estava com o id preechido na tabela.



SELECT
      *
FROM 
     tb_produtos LEFT JOIN tb_imagens ON(tb_produtos.id_produto = tb_imagens.id_produto);


-------------------------------------------------------------------------------------------------------------------


Neste caso a condição se inverte a tabela prioridade fica sendo a tabela da direita e todas os itens de imagem seram exibidos,
porem somente produtos que tiverem seus ids mensionados na tabela tb_imagesns serão retornados.


SELECT
      *
FROM 
     tb_produtos RIGHT JOIN tb_imagens ON(tb_produtos.id_produto = tb_imagens.id_produto);

--------------------------------------------------------------------------------------------------------------------

INNER JOIN 

 O INNER JOIN  não prioriza nem tabela da esquerda e nem da direita e sim as conexoes, as relações entre os registros
 dastabelas em questão. Todos os regsitros mensionados na consulta que não constituem uma relação seram ignorados pela consulta
 o codigo abaixo mostra um exemplo.No codigo abaixo ele retorna todos os registros onde houver relação entre a tabela de pedidos
 e a tabela auxiliar da relaçao entre pedidos e produtos ou seja os registros onde os ids não contam nas tres tabelas seram excluidos do retorno desta consulta. 


 SELECT
      *
 FROM 
     tb_pedidos INNER JOIN tb_pedidos_produtos ON(tb_pedidos.id_pedido = tb_pedidos_produtos.id_produto)
     INNER JOIN  tb_produtos ON(tb_pedidos_produtos.id_produto = tb_produtos.id_produto);




























