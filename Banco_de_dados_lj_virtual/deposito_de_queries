criando a base de dados.

CREATE DATABASE db_loja_virtual;

criando a tabela de produtos

CREATE TABLE tb_produtos(
   id int NOT NULL PRIMARY KEY AUTO_INCREMENT,
   produto VARCHAR(200) NOT NULL,
   valor FLOAT(8,2) NOT NULL
   
); 


Criando a tabela descrição tecnica com a chave estrangeira.Para criar uma tabela com chave estrangeira desntro da tabela tem que ter uma coliuna que vai receber este dado (o valor da chave com o mesmo tipo) por isso essa tabela te uam coluna id_produto que é INT NOT NULL poque não faz sentido existir uma descrição sem produto pra descrever. atenção na ultima linha 

Aqui eu digo que a coluna id_produto vai gusradar io valor de uma chave estrangeira 

FOREIGN KEY(id_produto)

agora eu uso a palavra references para indicar de qual tabela vai vir o valor pra prencher a minha chave estrangeira,
ai eu digo que ela vem da tb_produtos e entre parentes eu digo de que coluna vai vir o valor. 

REFERENCES tb_produtos(id_produto)




CREATE TABLE tb_descricoes_tecnicas(

  id_descricao_tecnica INT NOT NULL PRIMARY KEY AUTO_INCREMENT,

  id_produto INT NOT NULL,

  descricao_tecnica TEXT NOT NULL,

  FOREIGN KEY(id_produto) REFERENCES tb_produtos(id_produto)

);

inserindo produtos na tabela produtos 
-----------------------------------------------------------------------------------

ATENÇÃO: o campo id produto não esta sendo preechido porque quem preeche ele eo SGBD ele se incrmeenta sozinho / a tabela produto precisa ser preenchida primeiro
senão nao vao exitir porduto pra ligar a descrição e vai dar erro. 


INSERT INTO tb_produtos(produto, valor) VALUES ('Notebook Dell Inspiron Ultrafino Intel Core i7, 16GB RAM e 240GB SSD', 3500.00);

INSERT INTO tb_produtos(produto, valor) VALUES ('Smart TV LED 40" Samsung Full HD 2 HDMI 1 USB Wi-Fi Integrado', 1475.54);

INSERT INTO tb_produtos(produto, valor) VALUES ('Smartphone LG K10 Dual Chip Android 7.0 4G Wi-Fi Câmera de 13MP', 629.99);



inserindo descriçoes na tabela descrição
--------------------------------------------------------------------------------------


INSERT INTO tb_descricoes_tecnicas(id_produto, descricao_tecnica) VALUES (1, 'O novo Inspiron Dell oferece um design elegante e tela infinita que amplia seus sentidos, mantendo a sofisticação e medidas compactas...');

INSERT INTO tb_descricoes_tecnicas(id_produto, descricao_tecnica) VALUES (2, 'A smart TV da Samsung possui tela de 40" e oferece resolução Full HD, imagens duas vezes melhores que TVs HDs padrão...');

INSERT INTO tb_descricoes_tecnicas(id_produto, descricao_tecnica) VALUES (3, 'Saia da mesmice. O smartphone LG está mais divertido, rápido, fácil, cheio de selfies e com tela HD de incríveis 5,3"...');

criando a tabela imagens
--------------------------------------------------------------------------------------------

CREATE TABLE tb_imagens(
  id_imagem int NOT NULL PRIMARY KEY AUTO_INCREMENT,
  id_produto int NOT NULL,
  FOREIGN KEY(id_produto) REFERENCES tb_produtos(id_produto),
  url_imagem VARCHAR(200) NOT NULL
  
);

DICA: no caso de arquivos de midia,imagens ou tudo oque não for texto só guarde no banco de dados o texto contendo a  url porque apartir de url a aplicação mesmo se encarrega de buscar a imagem e exibi-la na interface. 
---------------------------------------------------------------------------------------------

inserindo imagens na tabela imagens
-------------------------------------------------------------------------------------------

INSERT INTO tb_imagens(1,url_imagem) VALUES(1,'notebook_1.jpg'),(1,'notebook_2.jpg'),(1,'notebook_3.jpg');

---------------------------------------------------------------------------------------

criando a a tabela clientes
-----------------------------------------------------------------

CREATE TABLE tb_clientes(
   id_cliente INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
   nome VARCHAR(100) NOT NULL,
   idade INT(3) NOT NULL
    
);
-------------------------------------------------------------------





criando a tabela pedidos
-----------------------------------------------------

CREATE TABLE tb_pedidos(
    
    id_pedido INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    id_cliente INT NOT NULL,
    FOREIGN KEY(id_cliente) REFERENCES tb_clientes(id_cliente),
    data_hora DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP
); 

DICA:A coluna  data_hora esta usando o tipo datetime que tem como
recurso o DEFAULT CURRENT_TIMESTAMP que pega a hora atual do servidor 
no moemnto da compra sem que seja necessaria uma linguagem de progrmaçao  
pra fazer isso.
------------------------------------------------------

crinado a tabela tb_pedido_produto que vai relacionar pedidos e produtoa na relaçao de muitos para muitos
---------------------------------------------------------------

CREATE TABLE tb_pedidos_produtos(
   id_pedido INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
   id_produto INT NOT NULL,
   FOREIGN KEY(id_pedido) REFERENCES tb_pedidos(id_pedido),
   FOREIGN KEY(id_produto) REFERENCES tb_produtos(id_produto)
   );

----------------------------------------------------------------------
 inserindo um cliente na tebela clientes
 ----------------------------------------------------------------
 INSERT INTO tb_clientes(nome,idade)VALUES('Jorge',29);
 ----------------------------------------------------------------



 inserindo 1 pedido na tebela pedidos 
 ------------------------------------------------------------
 INSERT INTO tb_pedidos(id_cliente) VALUES(1);


 ---------------------------------------------------------

 inserindo um pedido na tebela pedidos produtos

 -------------------------------------------------------------
 INSERT INTO tb_pedidos_produtos(id_pedido,id_produto) VALUES(1,2);

 Colocando outro produto no pedido

 INSERT INTO tb_pedidos_produtos(id_pedido,id_produto) VALUES(1,3);

 ou seja o id do pedido se mantem 1 mas o di do porduto muda isso significa que no pedido 1
 o cliente pediu 2 produtos 

 ela so recebe os id´s do pedido e do produto pra compor o pedido
 ---------------------------------------------------------------











